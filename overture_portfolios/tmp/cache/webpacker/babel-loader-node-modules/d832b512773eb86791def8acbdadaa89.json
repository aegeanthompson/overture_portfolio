{"ast":null,"code":"var _jsxFileName = \"/Users/Gigibear/dev/overture_portfolios/overture_portfolios/app/javascript/components/Main.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// DEPENDENCIES\n// packages\nimport React from 'react'; // components\n\nimport Post from './Post.js';\nimport Form from './Form.js'; // COMPONENT CLASS\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  // STATE\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n\n    _this.fetchPosts = function () {\n      fetch('/api/posts').then(function (data) {\n        return data.json();\n      }).then(function (jData) {\n        _this.setState({\n          posts: jData\n        });\n      });\n    };\n\n    _this.handleCreate = function (createData) {\n      fetch('/api/posts', {\n        body: JSON.stringify(createData),\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (createdPost) {\n        return createdPost.json();\n      }).then(function (jsonedPost) {\n        //takes me back to index\n        _this.props.handleView('home'); ////update posts\n\n\n        _this.setState(function (prevState) {\n          prevState.posts.push(jsonedPost);\n          return {\n            posts: prevState.posts\n          };\n        });\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleUpdate = function (updateData) {\n      fetch(\"/api/posts/\".concat(updateData.id), {\n        body: JSON.stringify(updateData),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (updatedPost) {\n        _this.props.handleView('home');\n\n        _this.fetchPosts();\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      fetch(\"/api/posts/\".concat(id), {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (json) {\n        _this.setState(function (prevState) {\n          var posts = prevState.posts.filter(function (post) {\n            return post.id !== id;\n          });\n          return {\n            posts: posts\n          };\n        });\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      posts: []\n    };\n    return _this;\n  } // HANDLERS\n\n\n  _createClass(Main, [{\n    key: \"render\",\n    // ==============\n    // RENDER\n    // ==============\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://i.ibb.co/n7zR9TY/imageedit-2-6441640447.png\",\n        alt: \"profile picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"infoText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"JOHN SMITH\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"WEB DEVELOPER\"))), React.createElement(\"h3\", {\n        className: \"bio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Industrious Software Developer with a passion for coding innovative projects. I have a knack for stream-lining complex issues. My background in Marketing/Sales aids me to create solutions that are both efficient and intuitive to the client\\u2019s needs. I enjoy being a part of a team and working hard towards our collective goals.\")), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.props.view.pageTitle), this.props.view.page === 'home' ? this.state.posts.map(function (postData) {\n        return React.createElement(Post, {\n          key: postData.id,\n          postData: postData,\n          handleView: _this2.props.handleView,\n          handleDelete: _this2.handleDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      }) : React.createElement(Form, {\n        handleCreate: this.handleCreate,\n        handleUpdate: this.handleUpdate,\n        formInputs: this.props.formInputs,\n        view: this.props.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(React.Component); // EXPORT\n\n\nexport default Main;","map":{"version":3,"sources":["/Users/Gigibear/dev/overture_portfolios/overture_portfolios/app/javascript/components/Main.js"],"names":["React","Post","Form","Main","props","fetchPosts","fetch","then","data","json","jData","setState","posts","handleCreate","createData","body","JSON","stringify","method","headers","createdPost","jsonedPost","handleView","prevState","push","err","console","log","handleUpdate","updateData","id","updatedPost","handleDelete","filter","post","state","view","pageTitle","page","map","postData","formInputs","Component"],"mappings":"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","sourcesContent":["\n// DEPENDENCIES\n\n// packages\nimport React from 'react'\n\n// components\nimport Post from './Post.js'\nimport Form from './Form.js'\n\n\n// COMPONENT CLASS\n\nclass Main extends React.Component {\n\n  // STATE\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: []\n    }\n  }\n\n  // HANDLERS\n\n  fetchPosts = () => {\n    fetch('/api/posts')\n      .then(data => data.json())\n      .then(jData => {\n        this.setState({posts: jData})\n      })\n    }\n    //create new post\n    handleCreate = (createData) => {\n    fetch('/api/posts', {\n      body: JSON.stringify(createData),\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(createdPost => {\n        return createdPost.json()\n      })\n      .then(jsonedPost => {\n        //takes me back to index\n        this.props.handleView('home')\n        ////update posts\n      this.setState(prevState => {\n        prevState.posts.push(jsonedPost)\n        return { posts: prevState.posts }\n        })\n      })\n    .catch(err => console.log(err))\n  }\n//update\n  handleUpdate = (updateData) => {\n  fetch(`/api/posts/${updateData.id}`, {\n    body: JSON.stringify(updateData),\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(updatedPost => {\n\n      this.props.handleView('home')\n\n      this.fetchPosts()\n    })\n    .catch(err => console.log(err))\n}\n\n//delete\nhandleDelete = (id) => {\n  fetch(`/api/posts/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(json => {\n      this.setState(prevState => {\n        const posts = prevState.posts.filter(post => post.id !== id)\n        return { posts }\n      })\n    })\n    .catch(err => console.log(err))\n}\n\n  // ==============\n  // RENDER\n  // ==============\n  render () {\n    return (\n      <main>\n      <div className=\"mainContainer\">\n      <div className=\"info\">\n        <img src=\"https://i.ibb.co/n7zR9TY/imageedit-2-6441640447.png\" alt=\"profile picture\"></img>\n        <div className=\"infoText\">\n          <h2>JOHN SMITH</h2>\n          <h4>WEB DEVELOPER</h4>\n        </div>\n      </div>\n      <h3 className=\"bio\">Industrious Software Developer with a passion for coding innovative projects. I have a knack for stream-lining complex issues. My background in Marketing/Sales aids me to create solutions that are both efficient and intuitive to the client’s needs. I enjoy being a part of a team and working hard towards our collective goals.</h3>\n      </div>\n       <h1>{this.props.view.pageTitle}</h1>\n       { this.props.view.page === 'home'\n       ? this.state.posts.map((postData) => (\n         <Post\n         key={postData.id}\n         postData={postData}\n         handleView={this.props.handleView}\n         handleDelete={this.handleDelete}\n         />\n      ))\n      : <Form\n      handleCreate={this.handleCreate}\n      handleUpdate={this.handleUpdate}\n      formInputs={this.props.formInputs}\n      view={this.props.view}\n      />\n    }\n    </main>\n\n    )\n  }\n}\n\n\n\n\n// EXPORT\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}